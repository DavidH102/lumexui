<Project Sdk="Microsoft.NET.Sdk.Razor">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
	</PropertyGroup>

	<PropertyGroup>
		<Title>LumexUI</Title>
		<Description>🚀 A versatile Blazor component library built using Tailwind CSS for efficient web development</Description>
		<Version>0.1.4</Version>
		<Authors>desmondinho</Authors>
		<PackageId>LumexUI</PackageId>
		<!--<PackageIcon>logo.png</PackageIcon>-->
		<PackageTags>blazor;components;library;tailwindcss;</PackageTags>
		<PackageProjectUrl>https://github.com/LumexUI/lumexui</PackageProjectUrl>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<RepositoryUrl>https://github.com/LumexUI/lumexui</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
	</PropertyGroup>

	<PropertyGroup>
		<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
	</PropertyGroup>

	<PropertyGroup>
		<TargetsForTfmSpecificContentInPackage>
			$(TargetsForTfmSpecificContentInPackage);AddUtilitiesToOutput
		</TargetsForTfmSpecificContentInPackage>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\..\LICENSE" Pack="true" Visible="false" PackagePath="" />
		<None Include="..\..\README.md" Pack="true" Visible="false" PackagePath="" />
		<!--<None Include="..\assets\logo.png" Pack="true" Visible="false" PackagePath="" />-->
	</ItemGroup>

	<ItemGroup>
		<SupportedPlatform Include="browser" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="8.0.6" />
		<PackageReference Include="TailwindMerge.NET" Version="0.3.0" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\LumexUI.Utilities\LumexUI.Utilities.csproj">
			<PrivateAssets>all</PrivateAssets>
			<ReferenceOutputAssembly>true</ReferenceOutputAssembly>
		</ProjectReference>
	</ItemGroup>

	<!-- Add utilities to the build output -->
	<Target Name="AddUtilitiesToOutput">
		<ItemGroup>
			<TfmSpecificPackageFile Include="$(OutputPath)\$(AssemblyName).Utilities.dll" PackagePath="lib\net8.0" />
		</ItemGroup>
	</Target>

	<!-- Install npm dependencies if 'node_modules' is not present -->
	<Target Name="Npm" BeforeTargets="BeforeBuild" Condition="!Exists('node_modules')">
		<Message Text="Running npm ci..." Importance="high" />
		<Exec Command="npm ci" />
	</Target>

	<!-- Run the 'build' script on every build -->
	<Target Name="NpmBuild" DependsOnTargets="Npm" BeforeTargets="Build">
		<Message Text="Running npm build..." Importance="high" />
		<Exec Command="npm run build" />
	</Target>

	<!-- Include content files to the build output if 'theme' is not present -->
	<Target Name="IncludeContentsToOutput" DependsOnTargets="NpmBuild" AfterTargets="NpmBuild">
		<Message Text="Including content files..." Importance="high" />

		<!-- Dynamically create items for the content files -->
		<ItemGroup>
			<StyleFiles Include="Styles\*.cs" />
			<PluginFile Include="Scripts\Plugin\dist\plugin.js" />
		</ItemGroup>

		<ItemGroup>
			<Content Include="@(StyleFiles)">
				<Pack>true</Pack>
				<PackagePath>theme\components\%(Filename)%(Extension)</PackagePath>
			</Content>
			<Content Include="@(PluginFile)">
				<Pack>true</Pack>
				<PackagePath>theme\plugin.js</PackagePath>
			</Content>
		</ItemGroup>
	</Target>

	<!-- Remove package.json and package-lock.json from the build output -->
	<ItemGroup>
		<None Include="package.json" />
		<None Include="package-lock.json" />
		<Content Remove="package.json" />
		<Content Remove="package-lock.json" />
	</ItemGroup>

	<ItemGroup>
		<InternalsVisibleTo Include="LumexUI.Tests" />
	</ItemGroup>

</Project>