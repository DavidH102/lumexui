@import '../../essentials/variables';
@import '../../essentials/mixins/mixins';
@import '../../utilities/variants';

// Buttons


.LumexButton-root {
	--LumexButton-min-width: #{map-get($spacers, 20)};
	--LumexButton-gap: #{map-get($spacers, 2)};
	--LumexButton-padding-y: #{map-get($spacers, 1\.5)};
	--LumexButton-padding-x: #{map-get($spacers, 4)};
	--LumexButton-font-size: var(--#{$prefix}-font-size-md);
	--LumexButton-font-weight: var(--#{$prefix}-body-font-weight);
	--LumexButton-line-height: var(--#{$prefix}-line-height-md);
	--LumexButton-color: var(--#{$prefix}-body-color);
	--LumexButton-bg: transparent;
	--LumexButton-border-width: var(--#{$prefix}-border-width);
	--LumexButton-border-color: transparent;
	--LumexButton-border-radius: var(--#{$prefix}-border-md);
	--LumexButton-hover-opacity: var(--#{$prefix}-hover-opacity);
	--LumexButton-disabled-opacity: var(--#{$prefix}-disabled-opacity);
}

.LumexButton {
	&-root {
		display: inline-flex;
		justify-content: center;
		align-items: center;
		gap: var(--LumexButton-gap);
		min-width: var(--LumexButton-min-width);
		padding: var(--LumexButton-padding-y) var(--LumexButton-padding-x);
		font-size: var(--LumexButton-font-size);
		font-weight: var(--LumexButton-font-weight);
		line-height: var(--LumexButton-line-height);
		color: var(--LumexButton-color);
		text-decoration: none;
		vertical-align: middle;
		-webkit-user-select: none;
		-moz-user-select: none;
		user-select: none;
		border: var(--LumexButton-border-width) solid var(--LumexButton-border-color);
		border-radius: var(--LumexButton-border-radius);
		background-color: var(--LumexButton-bg);
		outline: 2px solid transparent;
		outline-offset: 2px;
		transition-property: transform, color, background-color, border-color, opacity;
		transition-duration: $transition-duration;
		transition-timing-function: $transition-timing;

		&:hover {
			opacity: var(--LumexButton-hover-opacity);
		}

		&:focus-visible {
			outline-color: hsl(var(--#{$prefix}-focus) / 0.7);
		}

		&:active {
			transform: scale(0.97);
		}

		&:disabled,
		&.lumex-disabled {
			pointer-events: none;
			opacity: var(--LumexButton-disabled-opacity);
		}
	}

	&--sm {
		@include button-size( map-get($spacers, 1), map-get($spacers, 3), var(--#{$prefix}-font-size-sm), var(--#{$prefix}-line-height-sm), var(--#{$prefix}-border-sm) );
	}

	&--lg {
		@include button-size( map-get($spacers, 2), map-get($spacers, 6), var(--#{$prefix}-font-size-lg), var(--#{$prefix}-line-height-lg), var(--#{$prefix}-border-md) );
	}

	&--icon {
		--LumexButton-min-width: 0;
		--LumexButton-gap: 0;
		--LumexButton-padding-x: 0;
		width: calc(var(--LumexButton-line-height) + (var(--LumexButton-padding-y) + var(--LumexButton-border-width)) * 2);
		height: calc(var(--LumexButton-line-height) + (var(--LumexButton-padding-y) + var(--LumexButton-border-width)) * 2);
		overflow: hidden;
	}
}

@each $variant, $schemes in $variants {
	@each $scheme, $props in $schemes {
		.LumexButton--#{$variant}-#{$scheme} {
			--LumexButton-color: hsl(#{map-get($props, text)});

			@if map-has-key($props, bg) {
				--LumexButton-bg: hsl(#{map-get($props, bg)});
			}

			@if map-has-key($props, border) {
				--LumexButton-border-color: hsl(#{map-get($props, border)});
			}

			@if map-has-key($props, shadow) {
				--lumex-shadow-color: #{map-get($props, shadow)};
			}

			@if $variant == "ghost" {
				&:hover {
					--LumexButton-color: hsl(#{map-get($props, text-hover)});
					--LumexButton-bg: hsl(#{map-get($props, bg-hover)});
					--LumexButton-hover-opacity: 1;
				}
			}

			@if $variant == "light" {
				&:hover {
					--LumexButton-bg: hsl(var(--#{$prefix}-#{$scheme}-50));
					--LumexButton-hover-opacity: 1;
				}
			}
		}
	}
}
