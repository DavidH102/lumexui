@import '../../essentials/variables';
@import '../../essentials/mixins/mixins';

// Input field


.lumex-input-field {
    --lumex-input-padding-y: #{$input-padding-y};
    --lumex-input-padding-x: #{$input-padding-x};
    --lumex-input-bg: #{$input-bg};
    --lumex-input-bg-disabled: #{$input-bg-disabled};
    --lumex-input-color: #{$input-color};
    --lumex-input-color-disabled: #{$input-color-disabled};
    --lumex-input-label-color: #{$input-label-color};
    --lumex-input-font-size: #{$input-font-size};
    --lumex-input-caption-font-size: #{$font-size-xs};
    --lumex-input-border-radius: #{$input-border-radius};
}

.lumex-input-field {
    position: relative;
    display: inline-flex;
    flex-direction: column;
    width: 100%;

    &:focus-within > label.lumex-input-field-label--placeholder,
    &.lumex-dirty > label.lumex-input-field-label--placeholder {
        color: var(--lumex-input-label-color);
        transform: translate(var(--lumex-input-padding-x), calc(var(--lumex-input-padding-y) * .25)) scale(.75);
        transform-origin: top left;
    }

    &:not(:focus-within) .lumex-input-field-control::placeholder {
        color: transparent;
        user-select: none;
    }

    &:focus-within .lumex-input-field-control {
        outline: none;

        &::placeholder {
            color: $input-placeholder-color;
        }
    }

    &--underline {
        &:focus-within.lumex-input-field--underline:after {
            transform: scaleX(1);
        }

        &:after {
            left: 0;
            right: 0;
            bottom: 0;
            content: "";
            position: absolute;
            transform: scaleX(0);
            transition: transform 200ms cubic-bezier(0, 0, .2, 1) 0ms;
            border-bottom: 2px solid $input-label-color;
            pointer-events: none;
        }
    }


    &--sm {
        @include input-size($input-padding-y-sm, $input-padding-x-sm, $input-font-size-sm, $input-border-radius-sm);
    }

    &--lg {
        @include input-size($input-padding-y-lg, $input-padding-x-lg, $input-font-size-lg, $input-border-radius-lg);
    }
}


// Label

.lumex-input-field-label {
    margin-bottom: .375rem;
    color: var(--lumex-input-label-color);
    transition: color 150ms ease-in-out, transform 150ms ease-in-out;

    &--placeholder {
        position: absolute;
        top: 0;
        left: 0;
        font-size: var(--lumex-input-font-size);
        color: $input-placeholder-color;
        transform: translate(var(--lumex-input-padding-x), var(--lumex-input-padding-y)) scale(1);
        transform-origin: top left;
        pointer-events: none;
    }

    &.is-required:after {
        content: "*";
    }
}


// Control

.lumex-input-field-control-container {
    display: flex;
    font-size: var(--lumex-input-font-size);
    color: var(--lumex-input-color);
    background-color: var(--lumex-input-bg);
    border-radius: var(--lumex-input-border-radius);
}

.lumex-input-field-control {
    display: block;
    width: 100%;
    padding: var(--lumex-input-padding-y) var(--lumex-input-padding-x);
    color: inherit;
    background-color: inherit;
    border-radius: inherit;
    border: none;
    appearance: none;

    &:disabled {
        color: var(--lumex-input-color-disabled);
        background-color: var(--lumex-input-bg-disabled);
        cursor: not-allowed;
    }

    .lumex-input-field:has(label[class*="--placeholder"]) & {
        padding: calc(var(--lumex-input-padding-y) * 1.5) var(--lumex-input-padding-x) calc(var(--lumex-input-padding-y) * .5);
    }

    &-content {
        @include flex-center;
        padding-inline: map-get($spacers, 3);
        color: $input-placeholder-color;
        user-select: none;
    }
}


// Caption (hint / error)

.lumex-input-field-caption-container {
    padding-inline: $spacer;
    font-size: var(--lumex-input-caption-font-size);

    &::before {
        content: "";
        display: inline-block;
        height: calc(var(--lumex-input-caption-font-size) * 1.25);
    }

    & span.lumex-input-field-error {
        color: var(--lumex-danger);
    }

    & span.lumex-input-field-hint {
        color: var(--lumex-secondary-color);
    }
}


// Spin buttons

.lumex-input-field-spin {
    display: flex;
    flex-direction: column;
    justify-content: center;

    & > button {
        &:hover {
            background-color: rgba(0 0 0 / 0.05);
            border-radius: 2px;
        }
    }
}
