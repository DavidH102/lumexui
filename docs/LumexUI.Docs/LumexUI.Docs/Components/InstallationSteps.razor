@namespace LumexUI.Docs.Components

<ol class="relative space-y-2 mt-12 mb-16" style="counter-reset: step;">
    @if( Steps is not null )
    {
        foreach( var step in Steps )
        {
            <li class="relative pl-10 xl:grid grid-cols-5 gap-10 before:content-[counter(step)] before:absolute before:left-0 before:flex before:items-center before:justify-center before:w-[calc(1.375rem+1px)] before:h-[calc(1.375rem+1px)] before:text-[0.625rem] before:font-bold before:text-slate-700 before:rounded-md before:shadow-sm before:ring-1 before:ring-slate-900/5 dark:before:bg-slate-700 dark:before:text-slate-200 dark:before:ring-0 dark:before:shadow-none dark:before:highlight-white/5 pb-8 after:absolute after:top-[calc(1.875rem+1px)] after:bottom-0 after:left-[0.6875rem] after:w-px after:bg-slate-200 dark:after:bg-slate-200/5" style="counter-increment: step;">
                <div class="mb-6 col-span-2 xl:mb-0">
                    <h4 class="text-sm leading-6 font-semibold mb-2">
                        @step.Title
                    </h4>
                    <div class="prose prose-zinc prose-sm dark:prose-invert">
                        @step.Body
                    </div>
                </div>
                <div class="relative z-10 col-span-3 -ml-10 bg-slate-800 rounded-2xl shadow-lg xl:ml-0 dark:ring-1 dark:ring-inset dark:ring-white/10">
                    <CodeSnippet Code="@step.Code" />
                </div>
            </li>
        }
    }
</ol>

@code {
    [Parameter] public Step[]? Steps { get; set; }

    public record Step
    {
        public RenderFragment? Body { get; init; }
        public Code? Code { get; init; }
        public string? Title { get; init; }
    }
}
